---
- name: Install sbuild and cronic
  apt:
    package:
      - sbuild
      - cronic
    state: present
- name: Install lintian-brush dependencies
  apt:
    package:
      - devscripts
      - quilt
      - gnome-pkg-tools
      - schroot
      - libpcre3-dev
- name: Chroot base directory exists
  file:
    path: "{{ janitor_chroot_base }}"
    state: directory
- name: Check whether chroots exist
  stat:
    path: "{{ janitor_chroot_base }}/{{ item['chroot'] }}"
  register: sbuild
  with_items: "{{ janitor_distributions }}"
- name: "Create schroot ({{item.item.name }})"
  command: "{{ janitor_venv }}/bin/python {{ janitor_code_path }}/create-sbuild-chroot-schroot.py --config={{ janitor_conf_path }} --user={{ janitor_user }} --base-directory={{ janitor_chroot_base }} {% if 'include' in item.item %} --include={% for include in item.item['include'] %}{{ include }}{{ ',' if not loop.last }}{% endfor %}{% endif %} {{ item.item.name }}"
  when: not item.stat.exists
  with_items: "{{ sbuild.results }}"
- name: "Update schroot ( {{ item.item.chroot }})"
  command: sbuild-update -udcar "{{ item.item.chroot }}"
  with_items: "{{ sbuild.results }}"
  when: item.stat.exists
- name: Update schroot from cron job
  cron:
    name: "update schroot for {{ item.name }}"
    special_time: daily
    job: cronic sbuild-update -udcar "{{ item.chroot }}"
  with_items: "{{ janitor_distributions }}"
- name: janitor in sbuild group
  user:
    name: '{{ janitor_user }}'
    groups: sbuild
    append: yes
- name: Runner systemd installed
  template:
    src: worker@.service
    dest: /etc/systemd/system/janitor-worker@.service
- name: Enable systemd service file
  systemd:
    name: janitor-worker@{{ item }}.service
    state: started
    enabled: yes
    daemon_reload: yes
  loop: "{{ range(janitor_runner_concurrency) }}"
- name: Credentials file
  template:
    src: credentials.json
    dest: "{{ janitor_home }}/credentials.json"
    owner: "{{ janitor_user }}"
    mode: '0600'
  vars:
    username: "{{ inventory_hostname }}"
    password: "{{ lookup('password', 'worker-credentials.txt') }}"
